services:
  store-db:
    image: postgres:14.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=store_db
    ports:
      - 5432:5432
    volumes:
      - ./database-init-scripts/postgres/init-scripts:/docker-entrypoint-initdb.d
    command: [ "postgres", "-c", "wal_level=logical" ]
  
  druid-metadata:
    image: postgres:14.1-alpine
    ports:
      - 5434:5432
    volumes:
      - metadata_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=druid
      - POSTGRES_DB=druid

  postgres-dw:
    image: postgres:14.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=dw_db
    volumes:
      - ./database-init-scripts/postgres-dw/init-scripts:/docker-entrypoint-initdb.d
    ports:
      - 5433:5432
    command: [ "postgres", "-c", "wal_level=logical"]
  shipping-db:
    image: mysql:8.0.36
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=debezium
      - MYSQL_PASSWORD=dbz
      - MYSQL_DATABASE=shipping_db
    ports:
      - 3306:3306
    volumes:
      - ./database-init-scripts/mysql/init-scripts:/docker-entrypoint-initdb.d
      - ./database-init-scripts/mysql/conf:/etc/mysql/conf.d
  zookeeper:
    image: zookeeper:3.9.0
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  debezium-connect:
    image: debezium/connect:2.7.3.Final
    links:
      - kafka
      - store-db
      - shipping-db
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=debezium-events
      - CONFIG_STORAGE_TOPIC=debezium_configs
      - OFFSET_STORAGE_TOPIC=debezium_offsets
      - STATUS_STORAGE_TOPIC=debezium_statuses
    ports:
      - 8010:8010
  jobmanager:
    image: flink-extractor:latest 
    links: 
      - postgres-dw
    ports:
      - 8008:8081
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager 
      - DW_USERNAME=${DW_USERNAME}
      - DW_PASSWORD=${DW_PASSWORD}
      - DW_HOSTNAME=${DW_HOSTNAME}
      - DW_PORT=${DW_PORT}
      - DW_DATABASE=${DW_DATABASE}
      - BOOTSTRAP_SERVERS=${BOOTSTRAP_SERVERS}
  taskmanager:
    image: flink-extractor:latest 
    links: 
      - postgres-dw
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 9
      - DW_USERNAME=${DW_USERNAME}
      - DW_PASSWORD=${DW_PASSWORD}
      - DW_HOSTNAME=${DW_HOSTNAME}
      - DW_PORT=${DW_PORT}
      - DW_DATABASE=${DW_DATABASE}
      - BOOTSTRAP_SERVERS=${BOOTSTRAP_SERVERS}
  druid:
    image: druid
    volumes:
      - druid_shared:/opt/shared
    depends_on:
      - zookeeper
      - druid-metadata
    ports:
      - 8081:8081
    command:
      - bin/start-single-server-small
  sql-client:
    image: flink-extractor:latest 
    command: sql-client.sh
    links: 
      - postgres-dw
    depends_on:
      - jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        rest.address: jobmanager
      - DW_USERNAME=${DW_USERNAME}
      - DW_PASSWORD=${DW_PASSWORD}
      - DW_HOSTNAME=${DW_HOSTNAME}
      - DW_PORT=${DW_PORT}
      - DW_DATABASE=${DW_DATABASE}
      - BOOTSTRAP_SERVERS=${BOOTSTRAP_SERVERS}

volumes:
  shared-tmpfs:
    driver: local
    driver_opts:
        type: "tmpfs"
        device: "tmpfs"
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}